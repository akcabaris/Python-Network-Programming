******* create ip header *******
 ip (variable),IP (header)
	>>> ip=IP()
	>>> ip.show()
	>>> ip.dst="10.10.10.21"

******* tcp *******
	>>> tcp=TCP()
	>>> tcp.show()
	>>> tcp.summary()
	>>> tcp.sport=5001
	>>> tcp.dport=5002
	>>> tcp.flags='SA'  (SYN+ACK)
	>>> tcp.flags='S'	(SYN)
	>>> tcp.flags='A'	(ACK)

******* create package *******
	>>> pckt=ip/tcp
	>>> pckt.show()
	or
	>>> pckt2=IP(dst='10.10.10.21')/TCP(sport=5001,dport=5002,flags='SA')
	>>> pckt2.show()


******* ping request *******
	>>> icmp=ICMP()
	>>> icmp.show()
	>>> ipPing=IP()
	>>> ipPing.dst='10.10.10.21'
	>>> ipPckt=ipPing/icmp
	>>> ipPckt.show()
	>>> ipPckt.summary()

******* packet sending *******
	>>> send(ipPckt)
	>>> sr(ipPckt)
	>>> rcvPckt=sr(ipPckt)
	>>> rcvPckt.summary()

	>>> ans,unans=sr(ipPckt)
	>>> ans.summary()
	>>> ans[0]
	>>> ans[0][0]
	>>> ans[0][1]
	>>> ans[0][1].show()
	>>> ans[0][0].show()

	>>> rcvPckt=sr1(ipPckt)
	>>> rcvPckt.summary()
	>>> rcvPckt.show()

******* help *******
	>>> help(send)
	>>> help(sr1)
	>>> help(sniff)

******* sniff *******
	>>> s1=sniff(count=5)
	>>> s1
5 packet captured <Sniffed: TCP:0 UDP:0 ICMP:3 Other:2>
	>>> s1[0]
	...
	>>> s1[4]
	>>> s2=sniff(timeout=4,iface='lo')
	>>> s2
output	<Sniffed: TCP:0 UDP:0 ICMP:0 Other:0>
	>>> s3=sniff(timeout=4,count=2)
	>>> s3
	>>> s3[0]
	>>> s3[1]
	>>> s3.summary()
I'll capture the packet i sent and the packet of reply received
bi terminalde scapy'den yolla diÄŸerinde sniff kodu yaz
	>>> send(ipPckt)
	>>> s4 = sniff(filter="icmp",count=2)
	>>> s4.summary()
Ether / IP / ICMP 10.10.10.134 > 10.10.10.21 echo-request 0
Ether / IP / ICMP 10.10.10.21 > 10.10.10.134 echo-reply 0 / Padding


*************************************************************************
>>> ls(Ether)
>>> ls(ARP)

layer3 packet
>>> help(sr)
>>> help(send)

layer2 packet
>>> help(srp)
>>> help(sendp)
